<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2015 herd contributors

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.finra.dm</groupId>
      <artifactId>dm-build</artifactId>
      <version>1.0.0</version>
   </parent>

   <name>DM Build Root</name>
   <packaging>pom</packaging>

   <artifactId>dm-build-root</artifactId>

   <properties>

      <!-- Third Party JAR Dependencies -->
      <!--
        Note that upgrading the Activiti version will automatically attempt to upgrade the DB which will have problems running as the application user since
        table modification permissions won't be present. Instead, only upgrade the version when the DB scripts have been run by the DBA. The DB scripts
        are located in the activiti-engine JAR in the org.activiti.db.upgrade package.
       -->
      <activiti.version>5.16.3</activiti.version>
      <aspectj.version>1.8.2</aspectj.version>
      <aws.sdk.version>1.10.10</aws.sdk.version>
      <aws.sqs.messaging.version>1.0.0</aws.sqs.messaging.version>
      <commons.cli.version>1.2</commons.cli.version>
      <commons.codec.version>1.10</commons.codec.version>
      <commons.configuration.version>1.10</commons.configuration.version>
      <commons-dbcp2.version>2.1</commons-dbcp2.version>
      <commons.io.version>2.4</commons.io.version>
      <commons.lang3.version>3.3.2</commons.lang3.version>
      <eclipse.persistence.version>2.5.2</eclipse.persistence.version>
      <findbugs.version>3.0.0</findbugs.version>
      <hibernate.jpa.api>1.0.0.Final</hibernate.jpa.api>
      <hibernate.validator.version>5.1.2.Final</hibernate.validator.version>
      <hibernate.version>4.3.6.Final</hibernate.version>
      <h2db.version>1.4.187</h2db.version>
      <jackson.mapper.version>1.9.13</jackson.mapper.version>
      <jackson.version>2.5.4</jackson.version>
      <javax.servlet.version>3.0.1</javax.servlet.version>
      <jstl-impl.version>1.2.2</jstl-impl.version>
      <junit.version>4.11</junit.version>
      <log4j.version>1.2.17</log4j.version>
      <oracle.driver.version>11.2.0.2.0</oracle.driver.version>
      <oozie.version>4.1.0</oozie.version>
      <postgresql.driver.version>9.4-1201-jdbc41</postgresql.driver.version>
      <quartz.scheduler.version>2.2.1</quartz.scheduler.version>
      <slf4j.version>1.7.7</slf4j.version>
      <spring.security.version>3.2.6.RELEASE</spring.security.version>
      <spring.version>4.1.1.RELEASE</spring.version>
      <velocity.version>1.7</velocity.version>
      <woodstox.version>4.4.1</woodstox.version>

      <!-- Additional Activiti Explorer dependencies -->
      <google.gwt.version>2.3.0</google.gwt.version>
      <vaadin.version>0.10.0</vaadin.version>

      <!-- Third Party Plugin Dependencies -->
      <jaxb.xew.plugin.version>1.3</jaxb.xew.plugin.version>
      <jaxb2.basics.annotate.version>1.0.1</jaxb2.basics.annotate.version>
      <jaxb2.basics.runtime.version>0.8.4</jaxb2.basics.runtime.version>
      <jaxb2.basics.tools.version>0.8.4</jaxb2.basics.tools.version>
      <jaxb2.basics.version>0.8.4</jaxb2.basics.version>
      <jaxb2.value.constructor.version>3.0</jaxb2.value.constructor.version>
      <maven.build.helper.plugin.version>1.9.1</maven.build.helper.plugin.version>
      <maven.checkstyle.plugin.version>2.15</maven.checkstyle.plugin.version>
      <maven.cobertura.plugin.version>2.7</maven.cobertura.plugin.version>
      <maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
      <maven.dependency.plugin.version>2.9</maven.dependency.plugin.version>
      <maven.exec.plugin.version>1.3.2</maven.exec.plugin.version>
      <maven.findbugs.plugin.version>3.0.1</maven.findbugs.plugin.version>
      <maven.jar.plugin.version>2.5</maven.jar.plugin.version>
      <maven.jaxb2.plugin.version>0.10.0</maven.jaxb2.plugin.version>
      <maven.pmd.plugin.version>3.5</maven.pmd.plugin.version>
      <maven.resources.plugin.version>2.6</maven.resources.plugin.version>
      <maven.source.plugin.version>2.4</maven.source.plugin.version>
      <maven.surefire.plugin.version>2.17</maven.surefire.plugin.version>
      <maven.war.plugin.version>2.4</maven.war.plugin.version>
      <versions.maven.plugin.version>2.0</versions.maven.plugin.version>

      <!-- Compiler Information -->
      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>

      <!-- Timestamps and Encoding -->
      <maven.build.timestamp.format>yyyyMMdd_HHmmss</maven.build.timestamp.format>
      <build.timestamp>${maven.build.timestamp}</build.timestamp>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

   </properties>

   <!-- Default versions of all standard dependencies. They can be overridden
      in sub-projects if needed. -->
   <dependencyManagement>

      <dependencies>

         <!-- DM Dependencies -->
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-model-api</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-model-api</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-model</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-model</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-core</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-dao</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-dao</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-service</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-service</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-ui</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-ui</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-rest</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-rest</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-app</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-app</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-tools-common</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-tools-common</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-web-assets</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dm-docs-swagger</artifactId>
            <version>${project.version}</version>
         </dependency>

         <!-- Third Party Dependencies -->
         <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-core</artifactId>
            <version>${aws.sdk.version}</version>
         </dependency>
         <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-ec2</artifactId>
            <version>${aws.sdk.version}</version>
         </dependency>
         <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-emr</artifactId>
            <version>${aws.sdk.version}</version>
         </dependency>
         <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>${aws.sdk.version}</version>
         </dependency>
         <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-sts</artifactId>
            <version>${aws.sdk.version}</version>
         </dependency>
         <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-config</artifactId>
            <version>${aws.sdk.version}</version>
         </dependency>
         <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>amazon-sqs-java-messaging-lib</artifactId>
            <version>${aws.sqs.messaging.version}</version>
         </dependency>
         <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-sqs</artifactId>
            <version>${aws.sdk.version}</version>
         </dependency>
         <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
         </dependency>
         <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
         </dependency>
         <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons.cli.version}</version>
         </dependency>
         <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>${commons.configuration.version}</version>
            <!-- Commons Configuration has dependencies on an old version of commons-logging
               we don't want. -->
            <exclusions>
               <exclusion>
                  <artifactId>commons-logging</artifactId>
                  <groupId>commons-logging</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang3.version}</version>
         </dependency>
         <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
         </dependency>
         <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>${hibernate.jpa.api}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
            <!-- hibernate-entitymanager 4.3.6.Final has dependencies on old version of xml-apis that we don't want. -->
            <exclusions>
               <exclusion>
                  <artifactId>xml-apis</artifactId>
                  <groupId>xml-apis</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>${hibernate.version}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>${hibernate.validator.version}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson.mapper.version}</version>
         </dependency>
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.version}</version>
            <scope>provided</scope>
         </dependency>
         <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.servlet.jsp.jstl</artifactId>
            <version>${jstl-impl.version}</version>
            <!-- JSTL 1.2.2 has dependencies on old versions of Servlet and JSP API that we don't want. -->
            <exclusions>
               <exclusion>
                  <groupId>javax.servlet</groupId>
                  <artifactId>servlet-api</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>javax.servlet.jsp</groupId>
                  <artifactId>jsp-api</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
         </dependency>
         <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.driver.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2db.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
            <version>${spring.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.security.version}</version>
         </dependency>
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
         </dependency>
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics</artifactId>
            <version>${jaxb2.basics.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics-annotate</artifactId>
            <version>${jaxb2.basics.annotate.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics-runtime</artifactId>
            <version>${jaxb2.basics.runtime.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics-tools</artifactId>
            <version>${jaxb2.basics.tools.version}</version>
         </dependency>
         <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-value-constructor</artifactId>
            <version>${jaxb2.value.constructor.version}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>${commons-dbcp2.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>${findbugs.version}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>${velocity.version}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>woodstox-core-asl</artifactId>
            <version>${woodstox.version}</version>
         </dependency>

         <!--
           We are using a custom JAXB implementation instead of the one that comes with the JDK because this is the only way to bolt in our own
           CharacterEscapeHandler (see jaxb2Marshaller method in RestSpringModuleConfig). To use the bundled JAXB implementation would require us to
           implement an "internal" Java packaged CharacterEscapeHandler which isn't available to the javac compiler from the Maven command line
           (although it is available within an IDE). If we wanted to stick with using Sun's JAXB implementation, we could simply add in its external
           Maven dependency here which will override the internal JAXB implementation because it gets auto-discovered. The next paragraphs describe how.

           Spring's Jaxb2Marshaller class calls JAXBContext.newInstance(jaxb2Classes) which in turn calls ContextFinder.find with the “model” classes
           we passed in (via packages to scan). If we configure a file called "org/finra/dm/model/xml/jaxb.properties" that contains
           a "javax.xml.bind.context.factory" property, this gets used first to select the factory class for the JAXB implementation. This is how
           we add EclipseLink MOXy (see below).

           If we didn't configure this file, the ContextFinder proceeds to try other locations and eventually finds this file (for Sun's implementation):
           "jaxb-impl-2.2.11.jar!/META-INF/services/javax.xml.bind.JAXBContext" by looking on the classpath for META-INF/services/javax.xml.bind.JAXBContext.
           This file exists in jaxb-impl-2.2.11.jar and contains the text "com.sun.xml.bind.v2.ContextFactory" which bootstraps the external JAXB
           implementation.

           If the external context file hadn't been found (i.e. we didn't add any external JAXB dependency here), the ContextFinder would eventually try to use
           “com.sun.xml.internal.bind.v2.ContextFactory” which is the JDK internal default implementation.

           Since EclipseLink MOXy JAR doesn't have a JAXBContext file present and hence it doesn't get auto-discovered, we need to configure the explicit
           "jaxb.properties" file.  We have configured a file called "org/finra/dm/model/xml/jaxb.properties" that contains a "javax.xml.bind.context.factory"
           property, which is used to select the factory class for the JAXB implementation.
         -->
         <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.moxy</artifactId>
            <version>${eclipse.persistence.version}</version>
         </dependency>

         <!-- Quartz framework -->
         <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.scheduler.version}</version>
         </dependency>
         <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>${quartz.scheduler.version}</version>
         </dependency>

         <!-- Oozie client -->
         <dependency>
            <groupId>org.apache.oozie</groupId>
            <artifactId>oozie-client</artifactId>
            <version>${oozie.version}</version>
         </dependency>

         <!-- Activiti Dependencies -->
         <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-engine</artifactId>
            <version>${activiti.version}</version>
         </dependency>
         <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-spring</artifactId>
            <version>${activiti.version}</version>
         </dependency>
         <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-explorer</artifactId>
            <version>${activiti.version}</version>
         </dependency>
         <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-modeler</artifactId>
            <version>${activiti.version}</version>
            <exclusions>
               <exclusion>
                  <groupId>xalan</groupId>
                  <artifactId>xalan</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-diagram-rest</artifactId>
            <version>${activiti.version}</version>
         </dependency>
         <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-simple-workflow</artifactId>
            <version>${activiti.version}</version>
         </dependency>
         <!-- Dependencies needed for Activiti Explorer UI -->
         <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${google.gwt.version}</version>
         </dependency>
         <dependency>
            <groupId>org.vaadin.addons</groupId>
            <artifactId>dcharts-widget</artifactId>
            <version>${vaadin.version}</version>
         </dependency>
      </dependencies>

   </dependencyManagement>

   <build>

      <!-- Default versions of plugins. -->
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>com.github.jaxb-xew-plugin</groupId>
               <artifactId>jaxb-xew-plugin</artifactId>
               <version>${jaxb.xew.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>build-helper-maven-plugin</artifactId>
               <version>${maven.build.helper.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>cobertura-maven-plugin</artifactId>
               <version>${maven.cobertura.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>${maven.compiler.plugin.version}</version>
               <configuration>
                  <source>${maven.compiler.source}</source>
                  <target>${maven.compiler.target}</target>
               </configuration>
            </plugin>
            <plugin>
               <artifactId>maven-dependency-plugin</artifactId>
               <version>${maven.dependency.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-jar-plugin</artifactId>
               <version>${maven.jar.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-source-plugin</artifactId>
               <version>${maven.source.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>${maven.surefire.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-war-plugin</artifactId>
               <version>${maven.war.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>versions-maven-plugin</artifactId>
               <version>${versions.maven.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.jvnet.jaxb2.maven2</groupId>
               <artifactId>maven-jaxb2-plugin</artifactId>
               <version>${maven.jaxb2.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.jvnet.jaxb2_commons</groupId>
               <artifactId>jaxb2-basics</artifactId>
               <version>${jaxb2.basics.version}</version>
            </plugin>
            <plugin>
               <groupId>org.jvnet.jaxb2_commons</groupId>
               <artifactId>jaxb2-basics-annotate</artifactId>
               <version>${jaxb2.basics.annotate.version}</version>
            </plugin>
            <plugin>
               <groupId>org.jvnet.jaxb2_commons</groupId>
               <artifactId>jaxb2-basics-tools</artifactId>
               <version>${jaxb2.basics.tools.version}</version>
            </plugin>
            <plugin>
               <groupId>org.jvnet.jaxb2_commons</groupId>
               <artifactId>jaxb2-value-constructor</artifactId>
               <version>${jaxb2.value.constructor.version}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>findbugs-maven-plugin</artifactId>
               <version>${maven.findbugs.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-resources-plugin</artifactId>
               <version>${maven.resources.plugin.version}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>exec-maven-plugin</artifactId>
               <version>${maven.exec.plugin.version}</version>
            </plugin>
         </plugins>
      </pluginManagement>

      <plugins>
         <!-- Plugins to be used by all extending projects. -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${maven.build.helper.plugin.version}</version>
            <executions>
               <execution>
                  <phase>generate-sources</phase>
                  <goals>
                     <goal>add-source</goal>
                  </goals>
                  <configuration>
                     <sources>
                        <source>target/generated-sources</source>
                     </sources>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${maven.checkstyle.plugin.version}</version>
            <!-- Use our custom rule set which is built as part of build-tools. -->
            <configuration>
               <!-- Exclude auto-generated files. -->
               <excludes>org/finra/dm/model/xml/**,org/finra/dm/model/jpa/**</excludes>
               <configLocation>dm-cs.xml</configLocation>
               <headerLocation>apache-license-header.txt</headerLocation>
               <!-- Display the Checkstyle errors on the build output. -->
               <consoleOutput>true</consoleOutput>
            </configuration>
            <!-- We need to specify a dependency on the tools project to get access to the dm-cs.xml file. -->
            <dependencies>
               <dependency>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>dm-build-tools</artifactId>
                  <version>${project.version}</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>${maven.pmd.plugin.version}</version>
            <configuration>
               <targetJdk>${maven.compiler.source}</targetJdk>
               <!-- Use our custom rule set which is built as part of build-tools. -->
               <rulesets>
                  <ruleset>dm-pmd.xml</ruleset>
               </rulesets>
               <!-- Display the PMD errors on the build output. -->
               <verbose>true</verbose>
            </configuration>
            <!-- We need to specify a dependency on the tools project to get access to the dm-pmd.xml file. -->
            <dependencies>
               <dependency>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>dm-build-tools</artifactId>
                  <version>${project.version}</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <configuration>
               <excludeFilterFile>dm-findbugs-exclude.xml</excludeFilterFile>
               <!-- Enables analysis which takes more memory, but finds the most bugs. Another value is "Low" which uses less memory, but finds less bugs. -->
               <effort>Max</effort>
               <!-- Reports all bugs when threshold is "Low". Other values are "Medium" and "Max". -->
               <threshold>Low</threshold>
               <!-- Produces an XML report which can be read with "mvn findbugs:gui". -->
               <xmlOutput>true</xmlOutput>
            </configuration>
            <!-- We need to specify a dependency on the tools project to get access to the dm-findbugs-exclude.xml file. -->
            <dependencies>
               <dependency>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>dm-build-tools</artifactId>
                  <version>${project.version}</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cobertura-maven-plugin</artifactId>
            <configuration>
               <check/>
               <formats>
                  <format>html</format>
                  <format>xml</format>
               </formats>
               <aggregate>true</aggregate>
               <instrumentation>
                  <!-- We are excluding model classes since they are more or less POJO's
                      that don't contain business logic. It doesn't make sense to add test cases
                      to test getters and setters. We are excluding Spring JavaConfig configurations
                      (all within "config" packages) because it is Java code that creates Spring
                      beans (similar to XML configurations) and not business logic. If you add
                      additional exclusions, make sure you do a clean build. Otherwise, the classes
                      you previously built will still exist in the clover database and will still
                      be listed in the report. We are excluding the implementation of AWSOperations
                      and S3Operations, since unit tests use a mock implementation. We are also excluding
                      system jobs, since they would not be called directly from the unit tests.
                     -->
                  <excludes>
                     <exclude>org/finra/dm/model/**</exclude>
                     <exclude>org/finra/dm/**/config/**</exclude>
                     <exclude>org/finra/dm/dao/**/*OperationsImpl.class</exclude>
                     <exclude>org/finra/dm/service/systemjobs/**</exclude>
                  </excludes>
               </instrumentation>
            </configuration>
            <executions>
               <execution>
                  <phase>test</phase>
                  <goals>
                     <goal>cobertura</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
               <execution>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
               <execution>
                  <id>attach-sources</id>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>

   </build>

</project>
